(load "Prelude.lampas")

" Output to console
"
(write "Hello")

" vararg compose and read from file
"
((compose* write read open-input-file) "test.lampas")

" list->string, string->list and concatenation 
"
(write (list->string (concat (string->list "Hello") (string->list "World"))))

" closure
"
(define fn {|x| {|y| (+ x y)}})
(write ((fn 5) 6))

" variables and function definition/application
"
(define x 3)
(define (f x y) (sum x y))
(f 1 x)

" recursion
"
(define (fact n) 
  (if 
    (eqv? n 0) 
    1 
    (* (fact (- n 1)) n)))
(write (fact 3)) 

" macros
"
(define-syntax (rewr expr) (cdr expr))
(write (rewr "a" (fact 3)))